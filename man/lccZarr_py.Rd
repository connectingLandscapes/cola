% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cola_fun.R
\name{lccZarr_py}
\alias{lccZarr_py}
\title{Factorial least cost corridors on Zarr}
\usage{
lccZarr_py(
  inshp,
  intif,
  outtif,
  maxdist,
  smooth,
  tolerance,
  ncores = as.numeric(Sys.getenv("COLA_NCORES")),
  maxram = 6,
  crs = "None",
  sci = "None",
  eci = "None",
  tempFolder = NULL,
  py = Sys.getenv("COLA_PYTHON_PATH"),
  pyscriptA = system.file(package = "cola", "python/lcc_hpc1_zarr.py"),
  pyscriptB = system.file(package = "cola", "python/lcc_hpc2_zarr.py"),
  cml = TRUE,
  show.result = TRUE
)
}
\arguments{
\item{inshp}{String. Source points File path to the point layer. Spatial point layer (any ORG driver), CSV (X, Y files), or *.xy file}

\item{intif}{String. Surface resistance File path to the input raster. Requires a GeoTIFF file with square pixels}

\item{maxdist}{Numeric. This is the maximum distance to consider when calculating corridors and should correspond to the maximum dispersal distance of the focal species. For example, if the maximum dispersal distance of the focal species is 10 km, set this value to 10000. Values greater than this will be converted to 0 before summing corridors.}

\item{smooth}{Numeric. The width of the window, in the number of cells, is used to smooth the output corridor surface. If no smoothing is desired, set it to 0. This parameter allows backward compatibility with the original UNICOR functionality, which runs a smoothing window over the least-cost path surface.}

\item{tolerance}{Numeric. This is the distance beyond the least-cost path that an animal might traverse when moving between source points. Larger values result in wider corridors.}

\item{ncores}{Numeric. Number of cores. Number of CPU cores to run the analysis}

\item{maxram}{Numeric. RAM to use in GB}

\item{crs}{String. Projection string. String. Projection information in the case the input raster `intif`` has no spatial projection. Provide it as EPSG or ESRI string e.g. "ESRI:102028". Default value is ‘None’.}

\item{sci}{Numeric. Default is 'None'. Start corridor index. For now, these should be zero indexed python style. E.g. for a landscape with 10,000 corridors a first batch of corridors could be 0-500. Python range is such that this would process corridors 0-499. Then next batch would be 500-1000, which would process corridors 500-999. The next batch would be 1000-1500, and so on.}

\item{eci}{Numeric. End corridor index. Default is 'None'}

\item{tempFolder}{String. Path to the temporal folder where intermediate zarr files will be saved.}

\item{py}{Python executable location. Default is obtained from `Sys.getenv("COLA_PYTHON_PATH")`}

\item{pyscriptA}{Python script location. Default is obtained from `system.file(package = 'cola', 'python/lcc_hpc1_zarr.py')`}

\item{pyscriptB}{Python script location. Default is obtained from `system.file(package = 'cola', 'python/lcc_hpc2_zarr.py')`}

\item{cml}{Logical. Print the back-end command line? Default TRUE}

\item{show.result}{Logical. Print the command line result? Default TRUE}

\item{outif}{String. Path output GeoTIFF file name.}
}
\value{
Path with factorial least cost corridors. Each pixel show the number of corridors that connects eac
}
\description{
Run the factorial least cost corridors algorithm using the parallel computing library zarr.
The function uses two separate python scripts: lcc_hpc1_zarr.py and lcc_hpc2_zarr.py
Here the usage order in the backend:
   A: python script.py inshp intif maxdist ncores crs pazarr dazarr reOrderFile nodeidsFile maxram
   B: python script.py intif outtif dazarr smooth tolerance ncores crs reOrderFile nodeidsFile sci eci
Here an example. Pleas provide full path to all the file arguments:
   /path/to/python /path/to/lcc_hpc1_zarr.py points.shp inputSR.tif out_lcc.tif 150000 5 None temp_pa.zarr temp_da.zarr reOrderFile.csv nodeidsFile.csv 6
   /path/to/python /path/to/lcc_hpc2_zarr.py inputSR.tif out_lcc.tif temp_da.zarr 5 1 4 None reOrderFile.csv nodeidsFile.csv None None

#' Check more details on the user manual at https://github.com/connectingLandscapes/cola
}
\examples{
library(cola)
outdir <- tempdir()
corridors <- lccZarr_py(
  inshp = system.file(package = 'cola', 'sampledata/points_sabah_50.shp'),
  intif = system.file(package = 'cola', 'sampledata/sampleSR.tif'),
  outtif = file.path(outdir, 'corridors.tif'),
  maxdist = 100000, smooth = 0, tolerance = 0, maxram = 5)
}
\author{
Ivan Gonzalez <ig299@nau.edu>

Patrick Jantz <Patrick.Jantz@gmail.com>
}
