############################ installing #################################
detach("package:cola", unload=TRUE)
.rs.restartR()
remove.packages('cola')
.rs.restartR()
if(!require(devtools)){install.packages('devtools')}
library(devtools)
.rs.restartR()
devtools::install_github('connectingLandscapes/cola', dependencies = NA, upgrade = 'never') ## option 3: None

su shiny;
cd /home/shiny/cola; git pull
R -e "devtools::install_github('connectingLandscapes/cola', dependencies = NA, upgrade = 'never')"
sudo rm /srv/shiny-server/connecting-landscapes -R; sudo cp /home/shiny/cola/inst/app/* /home/shiny/colashiny/connecting-landscapes/. -R
R -e "shinyParallel::installShinyParallel('/home/shiny/colashiny/connecting-landscapes', max.sessions = 25)"


library(cola)
cola::diagnose_cola()
cola::setup_cola()
file.edit(file.path(Sys.getenv("HOME"), ".Renviron"))
.rs.restartR()
Sys.getenv(c('COLA_PYTHON_PATH', 'COLA_SCRIPTS_PATH'))
Sys.getenv(c('COLA_DATA_PATH', 'COLA_SCRIPTS_PATH', 'COLA_DSS_UPL_MB', 'COLA_VIZ_THRES_PIX', 'COLA_VIZ_RES_NCOL', 'COLA_VIZ_RES_NROW', 'COLA_NCORES' ))
cola::setup_cola_dss()
.rs.restartR()

library(cola)
cola::cola_dss()
# install.packages("C:/Users/gonza/Downloads/cola-main.zip", repos = NULL, type = "win.binary")
# devtools::install_local("C:/Users/gonza/Downloads/cola-main.zip")


 ## option 3: None


shinyParallel::installShinyParallel('/home/shiny/colashiny/connecting-landscapes', max.sessions = 25)
install.packages('C:/temp/cola-main.zip')
cola::setup_cola()

library(reticulatete)
reticulate::miniconda_path()
miniconda_uninstall()

reticulate::conda_remove('cola')


# source("~/.active-rstudio-document", echo=TRUE)

detach("package:cola", unload=TRUE)

library(cola)
library(terra)
wd <- 'cola_examples'
dir.create(wd)
setwd(wd)

hs_path <- system.file(package = 'cola', 'sampledata/sampleTif.tif')
points_path <- system.file(package = 'cola', 'sampledata/samplePoints.shp')
out_crk <- 'C:/temp/out_crk.tif'
crk_result <- crk_py(inshp = points_path, intif = hs_path, outtif = out_crk,
                     maxdist = 125000, shape = 'linear', transf = 'yes', volume = 1)



lcc_result <- lccJoblib_py(inshp = points_path, intif = hs_path, outtif = 'out_lcc2.tif',
                     maxdist = 150000, smooth = 0, tolerance = 0)

plot(rast('out_lcc2.tif'))

gdalUtilities::gdalwarp(srcfile = 'C:/Users/gonza/Downloads/clip_xsp_ext_tiger_resistance.tif',
                        dstfile = 'C:/Users/gonza/Downloads/clip_xsp_ext_tiger_resistanceNodata.tif',
                        tr = c(250, 250),
                        srcnodata = 128,
                        dstnodata = -9999)


gdalLog <- capture.output(gdalUtilities::gdalinfo(datasetname = 'out_crk_QKQ2024111903513905_resam.tif', hist = TRUE))

(nbands <- grep('Band [[:digit:]]{1,} Block', gdalLog))
ansList <- list()
del0 <- F
for(n in 1:length(nbands)){ # n <- 1

  (bucxml <- as.numeric(sub('buckets.+', '', grep('buckets ', gdalLog, value = TRUE)))[n])
  (minxml <- as.numeric(gsub('.+from | to.+', '', grep('buckets ', gdalLog, value = TRUE)) )[n] )
  (maxxml <- as.numeric(gsub('.+to |:', '', grep('buckets ', gdalLog, value = TRUE)))[n] )
  (histxml <- as.numeric(strsplit(split = '[[:space:]]', gsub("^ |^  ", "",
                                                              gdalLog[grep('buckets', gdalLog)[n]+1]
  ))[[1]]))

  labs <- seq(from = minxml, to = maxxml, length.out = bucxml)
  # length(histxml)
  xdf <- unique(diff(labs))[1]
  df2 <- data.frame(labs, id = ceiling((1:length(labs))/length(labs)*100),
                    nwlab = labs + xdf,
                    # nwlab = c(ceiling(labs[1]), round(labs[2:(bucxml-1)]), floor(labs[bucxml])),
                    val = histxml)


  hist2 <- aggregate(df2$val, by = list(df2$id), sum)
  result <- data.frame(id = hist2$Group.1, count = hist2$x, stringsAsFactors = FALSE)

  ## Delete 0 count values
  if(del0){
    result <- subset(result, count > 0)
  }
}


library(terra)
xc <- terra::vect('N:/My Drive/connectivity-nasa-USFSIP/09_workshops/Thailand/OSM_Merge_Major/OSM_Merge_Major.shp')
