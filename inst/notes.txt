# For versioning: https://kbroman.org/pkg_primer/pages/minimal.html

# For  https://ourcodingclub.github.io/tutorials/writing-r-package/
# Namespace : https://bookdown.dongzhuoer.com/hadley/r-pkgs/namespace

## For libaries: https://stackoverflow.com/questions/73866363/r-how-to-properly-include-libraries-in-my-package
# https://stackoverflow.com/questions/22565024/how-to-properly-include-dependencies-in-r-package

# External data: https://stackoverflow.com/questions/13463103/inst-and-extdata-folders-in-r-packaging
fpath <- system.file("extdata", "my_raw_data.csv", package="my_package")
read.csv(file=paste(path.package("my_package"),"/inst/extdata/my_raw_data.csv",sep="")) 

## Python file sin R package
https://stackoverflow.com/questions/60150956/attaching-python-script-while-building-r-package
https://stackoverflow.com/questions/13463103/inst-and-extdata-folders-in-r-packaging
https://stackoverflow.com/questions/60150956/attaching-python-script-while-building-r-package


# Writing the package
https://rstudio4edu.github.io/rstudio4edu-book/data-pkg.html
https://kbroman.org/pkg_primer/pages/build.html
https://github.com/kbroman/pkg_primer/tree/gh-pages/example
https://pkgdown.r-lib.org/
https://ourcodingclub.github.io/tutorials/writing-r-package/

## GDAL
https://stackoverflow.com/questions/45883445/how-to-fix-the-enviroment-variable-gdal-data-path-set
This works>
>C:\Users\ig299\AppData\Local\r-miniconda\envs\cola\python.exe C:\Users\ig299\AppData\Local\r-miniconda\envs\cola\Scripts\gdal_calc.py --help

https://gis.stackexchange.com/questions/279550/how-to-setup-gdal-calc-py-for-command-line-use-windows

python %CONDA_PREFIX%\Scripts\gdal_calc.py
There are other GDAL-related scripts available too:
dir %CONDA_PREFIX%\Scripts\gdal*

## Path variables
https://stackoverflow.com/questions/33103203/rtools-is-not-being-detected-from-rstudio

## CMD
# C:\Users\Admin\DOCUME~1\VIRTUA~1\colaR3\Scripts\python.exe' -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '"'"'C:\\Users\\Admin\\AppData\\Local\\Temp\\pip-install-q2renvli\\networkit_bbb1ed5652414ced8de6bd7c807b6c54\\setup.py'"'"'; __file__='"'"'C:\\Users\\Admin\\AppData\\Local\\Temp\\pip-install-q2renvli\\networkit_bbb1ed5652414ced8de6bd7c807b6c54\\setup.py'"'"';f 


+ "C:/Users/Admin/miniconda3/condabin/conda.bat" "remove" "--yes" "--name" "cola" "--all"
+ "C:/Users/Admin/miniconda3/condabin/conda.bat" "create" "--yes" "--name" "cola" "python=3.9" "--quiet" "-c" "conda-forge"

"C:/Users/ig299/AppData/Local/r-miniconda/condabin/conda.bat" "create" "--yes" "--name" "cola" "python=3.9" "--quiet" "-c" "conda-forge" 


## Geopandas GDAL_DATA
Warning 3: Cannot find header.dxf (GDAL_DATA is not defined)
Cannot find header.dxf (GDAL_DATA is not defined)
https://gis.stackexchange.com/questions/478160/gdal-warning-when-importing-geopandas
https://stackoverflow.com/questions/45883445/how-to-fix-the-enviroment-variable-gdal-data-path-set

import sys
sys.path

## conda yml
conda env export > environment_droplet.yml
conda env create -f environment.yml

# conda env create -f .\filea31c573b7531newYml.yml



## NAMESPACE
https://github.com/cran/ecochange/blob/3363d4222320625d96b74a1dc82ac0e7f93e832f/NAMESPACE


## Git page example
https://alive-abi.github.io/alive/code.html
https://github.com/ALIVE-ABI/alive/tree/main


## reticulate Conda options
# conda_remove(envname = 'cola') # conda remove -n cola --all


  # reticulate::py_list_packages(envname = 'cola') # dont use
  # reticulate::conda_create vs  py_install vs conda_install

  # This step does not work -- creating cola with more arguments
  # reticulate::conda_create( envname = 'cola',forge = TRUE, channel = "conda-forge",
  #  packages = c( 'pandas',  'cython', 'geopandas', 'numba' ) )

# CMD Windows
# reticulate::py_install(envname = envName, channel = "conda-forge", packages = 'numexpr')
# -- Installing `gdal` module + "C:/Users/gonza/AppData/Local/r-miniconda/condabin/conda.bat" "install" "--yes" "--name" "cola" "-c" "conda-forge" "gdal"

## Windows 
Anaconda Prompt (miniconda3):  %windir%\System32\cmd.exe "/K" C:\Users\Admin\miniconda3\Scripts\activate.bat C:\Users\Admin\miniconda3

Anaconda Powershell Prompt (miniconda3): %windir%\System32\WindowsPowerShell\v1.0\powershell.exe -ExecutionPolicy ByPass -NoExit -Command "& 'C:\Users\Admin\miniconda3\shell\condabin\conda-hook.ps1' ; conda activate 'C:\Users\Admin\miniconda3' 

Windows PowerShell: %SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe

## Wallace ideas
https://github.com/wallaceEcoMod/wallace
https://wallaceecomod.github.io/
https://rdrr.io/cran/wallace/src/R/run_wallace.R


##### Shiny PP

##### Shiny APP
# Paths app:
# path_error
# gitPath
  rootPath <- '/data/temp/'; dir.create(rootPath)
    ### 0 Initials  ----- 
  options(shiny.maxRequestSize = 250 * 1024^2)
  options(scipen=999)

gitPath <- '/home/shiny/connecting-landscapes'
rootPath <- '/data/temp/'; dir.create(rootPath)
path_error <- '/var/log/shiny-server/'

load(paste0(gitPath, '/docs/per_uper_crs_df.RData'))  
source(paste0(gitPath, '/R/cola_tools.R'))
hs2rs_file <- paste0(gitPath, '/docs/HS_size5_nd_squared.tif')
showcasePath <<- paste0(gitPath, '/showcase/')


logFilePath <<- paste0(rootPath, '/logFoldersR.txt')
#rootPath <- sort(Sys.getenv(c("TEMP", 'TMP')), decreasing=T)[1]
  
py <- '/home/shiny/anaconda3/envs/cola3/bin/python'

  
src <- '/home/shiny/connecting-landscapes/lib/CDPOP/src/CDPOP.py'
datapath <- tempFolder # datapath = tempFolder
src <- '/home/shiny/connecting-landscapes/src/s2res.py'
datapath <- tempFolder # datapath = tempFolder
	
src <- '/home/shiny/connecting-landscapes/src/create_source_points.py'
src <- '/home/shiny/connecting-landscapes/src/create_cdmat.py'
src <- '/home/shiny/connecting-landscapes/src/lcc.py'
src <- '/home/shiny/connecting-landscapes/src/prioritize_core_conn.py'
src <- '/home/shiny/connecting-landscapes/src/lcc_hdf5_v7.py'

## delete temp h5
h5file2 <- paste0(rootPath, '/', tempFolder, '/', tempH5, '_B.h5')


# devtools::install_github('connectingLandscapes/cola') ## option 3: None
# library(cola)
# cola::setup_cola()
# cola::diagnose_cola()
# # # # remove.packages('cola')
# Sys.getenv(c('COLA_PYTHON_PATH', 'COLA_SCRIPTS_PATH'))
# cola::setup_cola_dss()
# origLibs <- installed.packages()
# save(origLibs, file = 'origLibsBeforeDss.RData')
# cola::setup_cola_dss()
# libsafter1 <- installed.packages(); save(libsafter1, file = 'libsafter1.RData')
	
